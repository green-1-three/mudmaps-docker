version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: mudmaps-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: mudmaps-backend
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PORT: 3000
      CORS_ORIGIN: ${CORS_ORIGIN}
      HOST_PORT: ${HOST_PORT}
    depends_on:
      - postgres
    ports:
      - "${HOST_PORT}:3000"
    restart: unless-stopped

  tcp-listener:
    build:
      context: ./tcp-listener
    container_name: mudmaps-tcp-listener
    environment:
      LISTENER_PORT: ${LISTENER_PORT}
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    ports:
      - "${LISTENER_PORT}:${LISTENER_PORT}"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE: ${VITE_API_BASE}
        VITE_OSRM_BASE: ${VITE_OSRM_BASE}
    container_name: mudmaps-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  db-data:
