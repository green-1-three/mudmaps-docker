services:
  postgres:
    image: postgres:16-alpine
    container_name: mudmaps-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # no host port; internal only
    expose:
      - "5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: mudmaps-backend
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PORT: 3000
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on:
      - postgres
    expose:
      - "3000"        # internal only
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: mudmaps-frontend
    # IMPORTANT: no "ports:" here; proxy will publish 80
    expose:
      - "80"          # internal only
    restart: unless-stopped

  tcp-listener:
    build:
      context: ./tcp-listener
    container_name: mudmaps-tcp-listener
    environment:
      LISTENER_PORT: ${LISTENER_PORT}
    ports:
      - "5500:5500"   # public if you need it
    restart: unless-stopped

  proxy:
    image: nginx:alpine
    container_name: mudmaps-proxy
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"       # single public entrypoint
    volumes:
      - ./proxy/reverse-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

volumes:
  db-data: