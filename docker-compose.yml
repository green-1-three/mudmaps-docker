services:
  proxy:
    image: nginx:1.27-alpine
    container_name: mudmaps-proxy
    depends_on:
      - frontend
      - backend
    volumes:
      - ./proxy/reverse-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: mudmaps-frontend
    # not published to host; reached by proxy as http://frontend:80
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: mudmaps-backend
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PORT: 3000
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on:
      - postgres
    # not published to host; reached by proxy as http://backend:3000
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: mudmaps-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    # not published to host (internal only)
    restart: unless-stopped

  tcp-listener:
    build:
      context: ./tcp-listener
    container_name: mudmaps-tcp-listener
    environment:
      LISTENER_PORT: ${LISTENER_PORT}
    ports:
      - "5500:5500"   # keep public (or remove if you decide to lock it)
    restart: unless-stopped

volumes:
  db-data: