#!/bin/bash

# ============================================
# Capture Deduplication Metrics
# ============================================
# Usage: ./capture-metrics.sh [before|after]

TIMESTAMP=$(date +%Y%m%d-%H%M%S)
STAGE=${1:-before}

if [ "$STAGE" != "before" ] && [ "$STAGE" != "after" ]; then
    echo "Usage: $0 [before|after]"
    exit 1
fi

OUTPUT_FILE="deduplication-metrics-${STAGE}-${TIMESTAMP}.txt"

echo "============================================"
echo "Capturing ${STAGE} deduplication metrics..."
echo "============================================"
echo ""

# Check if running in Docker environment
if command -v docker &> /dev/null && docker compose ps | grep -q postgres; then
    echo "Using Docker environment..."
    docker compose exec -T postgres psql -U ${PGUSER:-mudmaps} -d ${PGDATABASE:-mudmaps} \
        -f /scripts/measure-deduplication-impact.sql > "$OUTPUT_FILE" 2>&1
elif command -v psql &> /dev/null; then
    echo "Using local psql..."
    psql -U ${PGUSER:-mudmaps} -d ${PGDATABASE:-mudmaps} \
        -f measure-deduplication-impact.sql > "$OUTPUT_FILE" 2>&1
else
    echo "Error: Neither Docker nor psql found"
    echo "Please run this script from the server with database access"
    exit 1
fi

if [ $? -eq 0 ]; then
    echo "‚úÖ Metrics captured successfully!"
    echo "üìä Results saved to: $OUTPUT_FILE"
    echo ""
    echo "Quick summary:"
    echo "----------------------------------------"
    
    # Extract key metrics
    if [ "$STAGE" = "before" ]; then
        TOTAL=$(grep -A 1 "total_polylines" "$OUTPUT_FILE" | tail -n 1 | awk '{print $1}')
        DEVICES=$(grep -A 1 "unique_devices" "$OUTPUT_FILE" | tail -n 1 | awk '{print $1}')
        LAST_24H=$(grep "24 hours" "$OUTPUT_FILE" | head -n 1 | awk '{print $2}')
        
        echo "Total polylines: ${TOTAL:-N/A}"
        echo "Unique devices: ${DEVICES:-N/A}"
        echo "Last 24 hours: ${LAST_24H:-N/A}"
    else
        VISIBLE=$(grep -A 1 "visible_polylines" "$OUTPUT_FILE" | tail -n 1 | awk '{print $1}')
        SUPERSEDED=$(grep -A 1 "superseded_polylines" "$OUTPUT_FILE" | tail -n 1 | awk '{print $1}')
        REDUCTION=$(grep -A 1 "reduction_pct" "$OUTPUT_FILE" | tail -n 1 | awk '{print $1}')
        
        echo "Visible polylines: ${VISIBLE:-N/A}"
        echo "Superseded polylines: ${SUPERSEDED:-N/A}"
        echo "Reduction: ${REDUCTION:-N/A}%"
    fi
    
    echo "----------------------------------------"
    echo ""
    
    if [ "$STAGE" = "before" ]; then
        echo "üí° Next steps:"
        echo "   1. Review the full output in $OUTPUT_FILE"
        echo "   2. Run the migration: 003_add_postgis_deduplication.sql"
        echo "   3. Run data migration: node migrate-polylines-to-postgis.js"
        echo "   4. Deploy updated worker and backend"
        echo "   5. Run: ./capture-metrics.sh after"
    else
        echo "üí° Next steps:"
        echo "   1. Compare with baseline metrics"
        echo "   2. Check your map to see visual improvement"
        echo "   3. Tune thresholds if needed"
    fi
    
else
    echo "‚ùå Error capturing metrics"
    echo "Check $OUTPUT_FILE for details"
    exit 1
fi

echo ""
